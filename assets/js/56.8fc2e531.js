(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{826:function(t,s,n){"use strict";n.r(s);var a=n(16),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"基于node-js网路编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于node-js网路编程"}},[t._v("#")]),t._v(" 基于Node.js网路编程")]),t._v(" "),s("p",[s("strong",[t._v("Node提供了net，dgram，http，https四个模块分别处理TCP,UDP,HTTP,HTTPS,适用于服务端和客户端")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("OSI参考模型")]),t._v(" "),s("th",[t._v("各层解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("应用层")]),t._v(" "),s("td",[t._v("为应用程序提供服务")])]),t._v(" "),s("tr",[s("td",[t._v("表示层")]),t._v(" "),s("td",[t._v("数据格式化，数据加密")])]),t._v(" "),s("tr",[s("td",[t._v("会话层")]),t._v(" "),s("td",[t._v("建立，管理和维护回话")])]),t._v(" "),s("tr",[s("td",[t._v("传输层")]),t._v(" "),s("td",[t._v("建立，管理和维护端到端的连接")])]),t._v(" "),s("tr",[s("td",[t._v("网络层")]),t._v(" "),s("td",[t._v("IP地址及路由选择")])]),t._v(" "),s("tr",[s("td",[t._v("数据链路层")]),t._v(" "),s("td",[t._v("提供介质访问和链路管理")])]),t._v(" "),s("tr",[s("td",[t._v("物理层")]),t._v(" "),s("td",[t._v("物理层")])])])]),t._v(" "),s("h4",{attrs:{id:"node-js网络通信概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js网络通信概述"}},[t._v("#")]),t._v(" Node.js网络通信概述")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("构建TCP服务")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" net "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connection'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("clientSocket")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已连接'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    clientSocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'连接上了啊'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("构建UDP服务")])]),t._v(" "),s("li",[s("p",[t._v("构建http服务")])]),t._v(" "),s("li",[s("p",[t._v("构建websoket服务")])]),t._v(" "),s("li",[s("p",[t._v("构建https服务")])])]),t._v(" "),s("h3",{attrs:{id:"如何判断当前脚本运行在浏览器端还是node环境中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何判断当前脚本运行在浏览器端还是node环境中"}},[t._v("#")]),t._v(" 如何判断当前脚本运行在浏览器端还是node环境中？")]),t._v(" "),s("p",[s("code",[t._v("this === window ? 'browser' : 'node';")])]),t._v(" "),s("p",[t._v("通过判断 Global 对象是否为 window，如果不为 window，当前脚本没有运行在浏览器中。")])])}),[],!1,null,null,null);s.default=e.exports}}]);