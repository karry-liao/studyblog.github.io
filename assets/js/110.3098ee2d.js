(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{885:function(t,s,e){"use strict";e.r(s);var a=e(16),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"一、keep-alive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、keep-alive"}},[t._v("#")]),t._v(" 一、keep-alive")]),t._v(" "),s("p",[t._v("在平常开发中，有部分组件没有必要多次初始化，这时，我们需要将组件进行持久化，使组件的状态维持不变，在下一次展示时，也不会进行重新初始化组件。")]),t._v(" "),s("p",[t._v("也就是说，keepalive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，或避免重新渲染，也就是所谓的组件缓存。")]),t._v(" "),s("p",[t._v("是Vue的内置组件，能在组件切换过程中将状态保留在内存中，防止重复渲染DOM。")]),t._v(" "),s("h3",{attrs:{id:"include和exclude指定是否缓存某些组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#include和exclude指定是否缓存某些组件"}},[t._v("#")]),t._v(" include和exclude指定是否缓存某些组件")]),t._v(" "),s("p",[t._v("include 包含的意思。值为字符串或正则表达式或数组。只有组件的名称与include的值相同的才会被缓存，即指定哪些被缓存，可以指定多个被缓存。这里以字符串为例，指定多个组件缓存，语法是用逗号隔开。如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定home组件和about组件被缓存 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive include"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"home,about"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("exclude相当于include的反义词，就是除了的意思，指定哪些组件不被缓存，用法和include类似，如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除了home组件和about组件别的都缓存，本例中就是只缓存detail组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive exclude"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"home,about"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"keep-alive的钩子函数执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的钩子函数执行顺序"}},[t._v("#")]),t._v(" keep-alive的钩子函数执行顺序")]),t._v(" "),s("p",[t._v("​\t\t首先使用了keep-alive的组件以后，组件上就会自动加上了"),s("code",[t._v("activated")]),t._v("钩子和"),s("code",[t._v("deactivated")]),t._v("钩子。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("activated")]),t._v(" 当组件被激活（使用）的时候触发 可以简单理解为进入这个页面的时候触发")]),t._v(" "),s("li",[s("code",[t._v("deactivated")]),t._v(" 当组件不被使用（inactive状态）的时候触发 可以简单理解为离开这个页面的时候触发")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("初始进入和离开 created ---\x3e mounted ---\x3e activated --\x3e deactivated\n后续进入和离开 activated --\x3e deactivated\n")])])]),s("h3",{attrs:{id:"keep-alive的应用场景举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的应用场景举例"}},[t._v("#")]),t._v(" keep-alive的应用场景举例")]),t._v(" "),s("ul",[s("li",[t._v("查看表格某条数据详情页，返回还是之前的状态，比如还是之前的筛选结果，还是之前的页数等")]),t._v(" "),s("li",[t._v("填写的表单的内容路由跳转返回还在，比如input框、下选择拉框、开关切换等用户输入了一大把东西，跳转再回来不能清空啊，不用让用户再写一遍")])]),t._v(" "),s("h3",{attrs:{id:"思考题-缓存后如何获取数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思考题-缓存后如何获取数据"}},[t._v("#")]),t._v(" 思考题：缓存后如何获取数据")]),t._v(" "),s("p",[t._v("解决方案可以有以下两种：")]),t._v(" "),s("ul",[s("li",[t._v("beforeRouteEnter")]),t._v(" "),s("li",[t._v("actived")])]),t._v(" "),s("h3",{attrs:{id:"beforerouteenter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beforerouteenter"}},[t._v("#")]),t._v(" beforeRouteEnter")]),t._v(" "),s("p",[t._v("每次组件渲染的时候，都会执行"),s("code",[t._v("beforeRouteEnter")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteEnter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vm")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次进入路由执行")]),t._v("\n        vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("h3",{attrs:{id:"actived"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#actived"}},[t._v("#")]),t._v(" actived")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("keep-alive")]),t._v("缓存的组件被激活的时候，都会执行"),s("code",[t._v("actived")]),t._v("钩子")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("activated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("注意：服务器端渲染期间"),s("code",[t._v("avtived")]),t._v("不被调用")]),t._v(" "),s("h1",{attrs:{id:"二、teleport"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、teleport"}},[t._v("#")]),t._v(" 二、Teleport")]),t._v(" "),s("p",[s("code",[t._v("<Teleport>")]),t._v(" 是一个内置组件，它可以将一个组件内部的一部分模板“传送”到该组件的 DOM 结构外层的位置去。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open = true"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Open Modal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Teleport to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"modal"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello from the modal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open = false"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Close"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Teleport"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("code",[t._v("<Teleport>")]),t._v(" 接收一个 "),s("code",[t._v("to")]),t._v(" prop 来指定传送的目标。"),s("code",[t._v("to")]),t._v(" 的值可以是一个 CSS 选择器字符串，也可以是一个 DOM 元素对象。这段代码的作用就是告诉 Vue“把以下模板片段"),s("strong",[t._v("传送到 "),s("code",[t._v("body")])]),t._v(" 标签下”。")]),t._v(" "),s("p",[t._v("你可以点击下面这个按钮，然后通")]),t._v(" "),s("h2",{attrs:{id:"禁用-teleport"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#禁用-teleport"}},[t._v("#")]),t._v(" 禁用 Teleport"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/teleport.html#disabling-teleport",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在某些场景下可能需要视情况禁用 "),s("code",[t._v("<Teleport>")]),t._v("。举例来说，我们想要在桌面端将一个组件当做浮层来渲染，但在移动端则当作行内组件。我们可以通过对 "),s("code",[t._v("<Teleport>")]),t._v(" 动态地传入一个 "),s("code",[t._v("disabled")]),t._v(" prop 来处理这两种不同情况。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Teleport "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("disabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"isMobile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Teleport"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"多个-teleport-共享目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个-teleport-共享目标"}},[t._v("#")]),t._v(" 多个 Teleport 共享目标"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/teleport.html#multiple-teleports-on-the-same-target",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("一个可重用的模态框组件可能同时存在多个实例。对于此类场景，多个 "),s("code",[t._v("<Teleport>")]),t._v(" 组件可以将其内容挂载在同一个目标元素上，而顺序就是简单的顺次追加，后挂载的将排在目标元素下更后面的位置上。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Teleport to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#modals"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Teleport"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Teleport to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#modals"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Teleport"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//渲染结果为：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"modals"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h1",{attrs:{id:"三、suspense"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、suspense"}},[t._v("#")]),t._v(" 三、Suspense")]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 是一个内置组件，用来在组件树中协调对异步依赖的处理。它让我们可以在组件树上层等待下层的多个嵌套异步依赖项解析完成，并可以在等待时渲染一个加载状态。")]),t._v(" "),s("p",[t._v("在这个组件树中有多个嵌套组件，要渲染出它们，首先得解析一些异步资源。如果没有 "),s("code",[t._v("<Suspense>")]),t._v("，则它们每个都需要处理自己的加载、报错和完成状态。在最坏的情况下，我们可能会在页面上看到三个旋转的加载态，在不同的时间显示出内容。")]),t._v(" "),s("p",[t._v("有了 "),s("code",[t._v("<Suspense>")]),t._v(" 组件后，我们就可以在等待整个多层级组件树中的各个异步依赖获取结果时，在顶层展示出加载中或加载失败的状态。")]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 可以等待的异步依赖有两种：")]),t._v(" "),s("ol",[s("li",[t._v("带有异步 "),s("code",[t._v("setup()")]),t._v(" 钩子的组件。这也包含了使用 "),s("code",[t._v("<script setup>")]),t._v(" 时有顶层 "),s("code",[t._v("await")]),t._v(" 表达式的组件。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cn.vuejs.org/guide/components/async.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("异步组件"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"async-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-setup"}},[t._v("#")]),t._v(" "),s("code",[t._v("async setup()")]),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#async-setup",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("组合式 API 中组件的 "),s("code",[t._v("setup()")]),t._v(" 钩子可以是异步的：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" posts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      posts\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果使用 "),s("code",[t._v("<script setup>")]),t._v("，那么顶层 "),s("code",[t._v("await")]),t._v(" 表达式会自动让该组件成为一个异步依赖：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" posts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" posts "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"异步组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步组件"}},[t._v("#")]),t._v(" 异步组件")]),t._v(" "),s("p",[t._v("异步组件默认就是**“suspensible”**的。这意味着如果组件关系链上有一个 "),s("code",[t._v("<Suspense>")]),t._v("，那么这个异步组件就会被当作这个 "),s("code",[t._v("<Suspense>")]),t._v(" 的一个异步依赖。在这种情况下，加载状态是由 "),s("code",[t._v("<Suspense>")]),t._v(" 控制，而该组件自己的加载、报错、延时和超时等选项都将被忽略。")]),t._v(" "),s("p",[t._v("异步组件也可以通过在选项中指定 "),s("code",[t._v("suspensible: false")]),t._v(" 表明不用 "),s("code",[t._v("Suspense")]),t._v(" 控制，并让组件始终自己控制其加载状态。")]),t._v(" "),s("h2",{attrs:{id:"加载中状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载中状态"}},[t._v("#")]),t._v(" 加载中状态")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#error-handling",target:"_blank",rel:"noopener noreferrer"}},[t._v("错误处理"),s("OutboundLink")],1),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#combining-with-other-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("和其他组件结合"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cn.vuejs.org/sponsor/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SPONSORS"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/frontend?utm_source=vue&utm_campaign=sponsor",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://sponsors.vuejs.org/images/xitujuejinjishushequ.png",alt:"稀土掘金技术社区"}}),s("OutboundLink")],1),s("a",{attrs:{href:"https://cn.vuejs.org/sponsor/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Your logo"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://wwads.cn/click/bundle?code=$XF4n85uARSTqEeEB4H9Pa3HSbSAJN&version=2.3",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://cdn.wwads.cn/creatives/COi3HnBnyFF545MHJE1dI9uO9r1Ja4D4p0fvTPYE.png",alt:"万维广告联盟"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://wwads.cn/click/bundle?code=$XF4n85uARSTqEeEB4H9Pa3HSbSAJN&version=2.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("👉"),s("strong",[t._v("API设计、调试、文档、自动化测试 ，就用Apipost！无需登录，直接使用！免费！")]),s("OutboundLink")],1),s("a",{attrs:{href:"https://wwads.cn/?utm_source=property-83&utm_medium=footer",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"",alt:"img"}}),t._v("广告"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"suspense"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#suspense"}},[t._v("#")]),t._v(" Suspense"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#suspense",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("实验性功能")]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 是一项实验性功能。它不一定会最终成为稳定功能，并且在稳定之前相关 API 也可能会发生变化。")]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 是一个内置组件，用来在组件树中协调对异步依赖的处理。它让我们可以在组件树上层等待下层的多个嵌套异步依赖项解析完成，并可以在等待时渲染一个加载状态。")]),t._v(" "),s("h2",{attrs:{id:"异步依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步依赖"}},[t._v("#")]),t._v(" 异步依赖"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#async-dependencies",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要了解 "),s("code",[t._v("<Suspense>")]),t._v(" 所解决的问题和它是如何与异步依赖进行交互的，我们需要想象这样一种组件层级结构：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<Suspense>\n└─ <Dashboard>\n   ├─ <Profile>\n   │  └─ <FriendStatus>（组件有异步的 setup()）\n   └─ <Content>\n      ├─ <ActivityFeed> （异步组件）\n      └─ <Stats>（异步组件）\n")])])]),s("p",[t._v("在这个组件树中有多个嵌套组件，要渲染出它们，首先得解析一些异步资源。如果没有 "),s("code",[t._v("<Suspense>")]),t._v("，则它们每个都需要处理自己的加载、报错和完成状态。在最坏的情况下，我们可能会在页面上看到三个旋转的加载态，在不同的时间显示出内容。")]),t._v(" "),s("p",[t._v("有了 "),s("code",[t._v("<Suspense>")]),t._v(" 组件后，我们就可以在等待整个多层级组件树中的各个异步依赖获取结果时，在顶层展示出加载中或加载失败的状态。")]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 可以等待的异步依赖有两种：")]),t._v(" "),s("ol",[s("li",[t._v("带有异步 "),s("code",[t._v("setup()")]),t._v(" 钩子的组件。这也包含了使用 "),s("code",[t._v("<script setup>")]),t._v(" 时有顶层 "),s("code",[t._v("await")]),t._v(" 表达式的组件。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cn.vuejs.org/guide/components/async.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("异步组件"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"async-setup-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-setup-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("async setup()")]),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#async-setup",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("组合式 API 中组件的 "),s("code",[t._v("setup()")]),t._v(" 钩子可以是异步的：")]),t._v(" "),s("p",[t._v("js")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export default {\n  async setup() {\n    const res = await fetch(...)\n    const posts = await res.json()\n    return {\n      posts\n    }\n  }\n}\n")])])]),s("p",[t._v("如果使用 "),s("code",[t._v("<script setup>")]),t._v("，那么顶层 "),s("code",[t._v("await")]),t._v(" 表达式会自动让该组件成为一个异步依赖：")]),t._v(" "),s("p",[t._v("vue")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<script setup>\nconst res = await fetch(...)\nconst posts = await res.json()\n<\/script>\n\n<template>\n  {{ posts }}\n</template>\n")])])]),s("h3",{attrs:{id:"异步组件-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步组件-2"}},[t._v("#")]),t._v(" 异步组件"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#async-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("异步组件默认就是**“suspensible”**的。这意味着如果组件关系链上有一个 "),s("code",[t._v("<Suspense>")]),t._v("，那么这个异步组件就会被当作这个 "),s("code",[t._v("<Suspense>")]),t._v(" 的一个异步依赖。在这种情况下，加载状态是由 "),s("code",[t._v("<Suspense>")]),t._v(" 控制，而该组件自己的加载、报错、延时和超时等选项都将被忽略。")]),t._v(" "),s("p",[t._v("异步组件也可以通过在选项中指定 "),s("code",[t._v("suspensible: false")]),t._v(" 表明不用 "),s("code",[t._v("Suspense")]),t._v(" 控制，并让组件始终自己控制其加载状态。")]),t._v(" "),s("h2",{attrs:{id:"加载中状态-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载中状态-2"}},[t._v("#")]),t._v(" 加载中状态"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#loading-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 组件有两个插槽："),s("code",[t._v("#default")]),t._v(" 和 "),s("code",[t._v("#fallback")]),t._v("。两个插槽都只允许"),s("strong",[t._v("一个")]),t._v("直接子节点。在可能的时候都将显示默认槽中的节点。否则将显示后备槽中的节点。")]),t._v(" "),s("p",[t._v("template")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Suspense"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 具有深层异步依赖的组件 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dashboard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 在 #fallback 插槽中显示 “正在加载中” "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template #fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    Loading"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Suspense"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("在初始渲染时，"),s("code",[t._v("<Suspense>")]),t._v(" 将在内存中渲染其默认的插槽内容。如果在这个过程中遇到任何异步依赖，则会进入"),s("strong",[t._v("挂起")]),t._v("状态。在挂起状态期间，展示的是后备内容。当所有遇到的异步依赖都完成后，"),s("code",[t._v("<Suspense>")]),t._v(" 会进入"),s("strong",[t._v("完成")]),t._v("状态，并将展示出默认插槽的内容。")]),t._v(" "),s("p",[t._v("如果在初次渲染时没有遇到异步依赖，"),s("code",[t._v("<Suspense>")]),t._v(" 会直接进入完成状态。")]),t._v(" "),s("p",[t._v("进入完成状态后，只有当默认插槽的根节点被替换时，"),s("code",[t._v("<Suspense>")]),t._v(" 才会回到挂起状态。组件树中新的更深层次的异步依赖"),s("strong",[t._v("不会")]),t._v("造成 "),s("code",[t._v("<Suspense>")]),t._v(" 回退到挂起状态。")]),t._v(" "),s("p",[t._v("发生回退时，后备内容不会立即展示出来。相反，"),s("code",[t._v("<Suspense>")]),t._v(" 在等待新内容和异步依赖完成时，会展示之前 "),s("code",[t._v("#default")]),t._v(" 插槽的内容。这个行为可以通过一个 "),s("code",[t._v("timeout")]),t._v(" prop 进行配置：在等待渲染新内容耗时超过 "),s("code",[t._v("timeout")]),t._v(" 之后，"),s("code",[t._v("<Suspense>")]),t._v(" 将会切换为展示后备内容。若 "),s("code",[t._v("timeout")]),t._v(" 值为 "),s("code",[t._v("0")]),t._v(" 将导致在替换默认内容时立即显示后备内容。")]),t._v(" "),s("h2",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/built-ins/suspense.html#events",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("<Suspense>")]),t._v(" 组件会触发三个事件："),s("code",[t._v("pending")]),t._v("、"),s("code",[t._v("resolve")]),t._v(" 和 "),s("code",[t._v("fallback")]),t._v("。"),s("code",[t._v("pending")]),t._v(" 事件是在进入挂起状态时触发。"),s("code",[t._v("resolve")]),t._v(" 事件是在 "),s("code",[t._v("default")]),t._v(" 插槽完成获取新内容时触发。"),s("code",[t._v("fallback")]),t._v(" 事件则是在 "),s("code",[t._v("fallback")]),t._v(" 插槽的内容显示时触发。")]),t._v(" "),s("p",[t._v("例如，可以使用这些事件在加载新组件时在之前的 DOM 最上层显示一个加载指示器。")])])}),[],!1,null,null,null);s.default=r.exports}}]);