/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "芒梨博客",
  "description": "个人博客",
  "base": "/studyblog.github.io/",
  "headTags": [
    [
      "link",
      {
        "rel": "icon",
        "href": "/studyblog.github.io/favicon.ico"
      }
    ]
  ],
  "pages": [
    {
      "title": "计算机网络基础知识总结",
      "frontmatter": {},
      "regularPath": "/Components/CpNet/base.html",
      "relativePath": "Components/CpNet/base.md",
      "key": "v-7d90b73c",
      "path": "/Components/CpNet/base.html",
      "headers": [
        {
          "level": 2,
          "title": "网络层次划分",
          "slug": "网络层次划分"
        },
        {
          "level": 3,
          "title": "物理层",
          "slug": "物理层"
        },
        {
          "level": 3,
          "title": "数据链路层",
          "slug": "数据链路层"
        },
        {
          "level": 3,
          "title": "网络层",
          "slug": "网络层"
        },
        {
          "level": 3,
          "title": "传输层",
          "slug": "传输层"
        },
        {
          "level": 3,
          "title": "会话层",
          "slug": "会话层"
        },
        {
          "level": 3,
          "title": "表示层",
          "slug": "表示层"
        },
        {
          "level": 3,
          "title": "应用层",
          "slug": "应用层"
        }
      ]
    },
    {
      "title": "数据可视化",
      "frontmatter": {},
      "regularPath": "/Components/Echarts/echarts.html",
      "relativePath": "Components/Echarts/echarts.md",
      "key": "v-dee70954",
      "path": "/Components/Echarts/echarts.html"
    },
    {
      "title": "移动端点击时间的延时",
      "frontmatter": {},
      "regularPath": "/Components/MiniPrograme/delay.html",
      "relativePath": "Components/MiniPrograme/delay.md",
      "key": "v-668422b0",
      "path": "/Components/MiniPrograme/delay.html",
      "headers": [
        {
          "level": 2,
          "title": "移动端点击时间的延时",
          "slug": "移动端点击时间的延时"
        }
      ]
    },
    {
      "title": "MiniPrograme",
      "frontmatter": {},
      "regularPath": "/Components/MiniPrograme/base.html",
      "relativePath": "Components/MiniPrograme/base.md",
      "key": "v-be9653d4",
      "path": "/Components/MiniPrograme/base.html",
      "headers": [
        {
          "level": 2,
          "title": "生命周期",
          "slug": "生命周期"
        },
        {
          "level": 2,
          "title": "钩子函数",
          "slug": "钩子函数"
        },
        {
          "level": 2,
          "title": "页面生命周期",
          "slug": "页面生命周期"
        },
        {
          "level": 2,
          "title": "组件生命周期",
          "slug": "组件生命周期"
        }
      ]
    },
    {
      "title": "解决小程序打包上线包体过大导致失败的问题",
      "frontmatter": {},
      "regularPath": "/Components/MiniPrograme/package.html",
      "relativePath": "Components/MiniPrograme/package.md",
      "key": "v-118a0748",
      "path": "/Components/MiniPrograme/package.html"
    },
    {
      "title": "创建第一个应用",
      "frontmatter": {},
      "regularPath": "/Components/NodeJs/Start.html",
      "relativePath": "Components/NodeJs/Start.md",
      "key": "v-32e28668",
      "path": "/Components/NodeJs/Start.html",
      "headers": [
        {
          "level": 2,
          "title": "创建第一个应用",
          "slug": "创建第一个应用"
        },
        {
          "level": 2,
          "title": "Node包管理工具-npm",
          "slug": "node包管理工具-npm"
        },
        {
          "level": 2,
          "title": "Node.js REPL(交互式解析器)",
          "slug": "node-js-repl-交互式解析器"
        },
        {
          "level": 2,
          "title": "Node.js回调函数",
          "slug": "node-js回调函数"
        },
        {
          "level": 2,
          "title": "Node.js事件循环",
          "slug": "node-js事件循环"
        }
      ]
    },
    {
      "title": "如何判断当前脚本运行在浏览器端还是node环境中？",
      "frontmatter": {},
      "regularPath": "/Components/NodeJs/Node.html",
      "relativePath": "Components/NodeJs/Node.md",
      "key": "v-69a880da",
      "path": "/Components/NodeJs/Node.html",
      "headers": [
        {
          "level": 2,
          "title": "如何判断当前脚本运行在浏览器端还是node环境中？",
          "slug": "如何判断当前脚本运行在浏览器端还是node环境中"
        }
      ]
    },
    {
      "title": "Webpack loader 和 plugin 实现原理",
      "frontmatter": {},
      "regularPath": "/Components/WebPack/LoaderAndPlugin.html",
      "relativePath": "Components/WebPack/LoaderAndPlugin.md",
      "key": "v-580a4394",
      "path": "/Components/WebPack/LoaderAndPlugin.html",
      "headers": [
        {
          "level": 2,
          "title": "1.1 webpack打包基本原理",
          "slug": "_1-1-webpack打包基本原理"
        },
        {
          "level": 2,
          "title": "1.2 实现webpack打包核心功能",
          "slug": "_1-2-实现webpack打包核心功能"
        },
        {
          "level": 3,
          "title": "1. 处理单个模块（以入口为例）",
          "slug": "_1-处理单个模块-以入口为例"
        },
        {
          "level": 3,
          "title": "2. 递归的获取所有模块的信息",
          "slug": "_2-递归的获取所有模块的信息"
        },
        {
          "level": 3,
          "title": "3. 生成最终代码",
          "slug": "_3-生成最终代码"
        },
        {
          "level": 2,
          "title": "2.1 如何自己实现一个loader",
          "slug": "_2-1-如何自己实现一个loader"
        },
        {
          "level": 3,
          "title": "2.1.1 如何实现一个同步loader",
          "slug": "_2-1-1-如何实现一个同步loader"
        },
        {
          "level": 2,
          "title": "2.2 如何自己实现一个plugin",
          "slug": "_2-2-如何自己实现一个plugin"
        }
      ]
    },
    {
      "title": "Treeshaking及其工作原理",
      "frontmatter": {},
      "regularPath": "/Components/WebPack/TreeShaking.html",
      "relativePath": "Components/WebPack/TreeShaking.md",
      "key": "v-729ac2da",
      "path": "/Components/WebPack/TreeShaking.html",
      "headers": [
        {
          "level": 2,
          "title": "tree shaking的原理是什么?",
          "slug": "tree-shaking的原理是什么"
        },
        {
          "level": 2,
          "title": "好处",
          "slug": "好处"
        }
      ]
    },
    {
      "title": "SourceMap",
      "frontmatter": {},
      "regularPath": "/Components/WebPack/sourcemap.html",
      "relativePath": "Components/WebPack/sourcemap.md",
      "key": "v-49887862",
      "path": "/Components/WebPack/sourcemap.html",
      "headers": [
        {
          "level": 2,
          "title": "SourceMap",
          "slug": "sourcemap"
        },
        {
          "level": 3,
          "title": "浏览器怎么知道源文件和 source map 的关系？",
          "slug": "浏览器怎么知道源文件和-source-map-的关系"
        },
        {
          "level": 3,
          "title": "source map 的应用",
          "slug": "source-map-的应用"
        }
      ]
    },
    {
      "title": "ES6中的Set和Map的区别",
      "frontmatter": {},
      "regularPath": "/Components/base/MapAndSet.html",
      "relativePath": "Components/base/MapAndSet.md",
      "key": "v-3734d1f0",
      "path": "/Components/base/MapAndSet.html",
      "headers": [
        {
          "level": 2,
          "title": "一、Set",
          "slug": "一、set"
        },
        {
          "level": 2,
          "title": "二、Map",
          "slug": "二、map"
        },
        {
          "level": 2,
          "title": "三、WeakSet 和 WeakMap",
          "slug": "三、weakset-和-weakmap"
        },
        {
          "level": 3,
          "title": "WeakSet",
          "slug": "weakset"
        },
        {
          "level": 3,
          "title": "WeakMap",
          "slug": "weakmap"
        }
      ]
    },
    {
      "title": "Webpack-dev-server",
      "frontmatter": {},
      "regularPath": "/Components/WebPack/WebPackDevServer.html",
      "relativePath": "Components/WebPack/WebPackDevServer.md",
      "key": "v-31c46882",
      "path": "/Components/WebPack/WebPackDevServer.html"
    },
    {
      "title": "如何提高webpack构建速度？",
      "frontmatter": {},
      "regularPath": "/Components/WebPack/webpack.html",
      "relativePath": "Components/WebPack/webpack.md",
      "key": "v-6565f56c",
      "path": "/Components/WebPack/webpack.html",
      "headers": [
        {
          "level": 3,
          "title": "优化loader配置",
          "slug": "优化loader配置"
        },
        {
          "level": 3,
          "title": "合理使用 resolve.extensions",
          "slug": "合理使用-resolve-extensions"
        },
        {
          "level": 3,
          "title": "优化 resolve.modules",
          "slug": "优化-resolve-modules"
        },
        {
          "level": 3,
          "title": "优化 resolve.alias",
          "slug": "优化-resolve-alias"
        },
        {
          "level": 3,
          "title": "使用 DLLPlugin 插件",
          "slug": "使用-dllplugin-插件"
        },
        {
          "level": 3,
          "title": "使用 cache-loader",
          "slug": "使用-cache-loader"
        },
        {
          "level": 3,
          "title": "terser 启动多线程",
          "slug": "terser-启动多线程"
        },
        {
          "level": 3,
          "title": "合理使用 sourceMap",
          "slug": "合理使用-sourcemap"
        },
        {
          "level": 3,
          "title": "三、总结",
          "slug": "三、总结"
        }
      ]
    },
    {
      "title": "正则表达式",
      "frontmatter": {},
      "regularPath": "/Components/base/Reg.html",
      "relativePath": "Components/base/Reg.md",
      "key": "v-5168da28",
      "path": "/Components/base/Reg.html",
      "headers": [
        {
          "level": 2,
          "title": "正则表达式的匹配规则",
          "slug": "正则表达式的匹配规则"
        },
        {
          "level": 2,
          "title": "正则表达式标记",
          "slug": "正则表达式标记"
        },
        {
          "level": 2,
          "title": "匹配方法",
          "slug": "匹配方法"
        }
      ]
    },
    {
      "title": "快速上手",
      "frontmatter": {},
      "regularPath": "/Components/base/start.html",
      "relativePath": "Components/base/start.md",
      "key": "v-1ed84da8",
      "path": "/Components/base/start.html",
      "headers": [
        {
          "level": 2,
          "title": "获取组件",
          "slug": "获取组件"
        },
        {
          "level": 2,
          "title": "引入组件",
          "slug": "引入组件"
        },
        {
          "level": 2,
          "title": "使用组件",
          "slug": "使用组件"
        }
      ]
    },
    {
      "title": "堆与栈的区别",
      "frontmatter": {},
      "regularPath": "/Components/dataStructureAndCount/StackAndHeap.html",
      "relativePath": "Components/dataStructureAndCount/StackAndHeap.md",
      "key": "v-27019a42",
      "path": "/Components/dataStructureAndCount/StackAndHeap.html",
      "headers": [
        {
          "level": 3,
          "title": "栈简介",
          "slug": "栈简介"
        },
        {
          "level": 3,
          "title": "堆简介",
          "slug": "堆简介"
        },
        {
          "level": 3,
          "title": "堆与栈区别",
          "slug": "堆与栈区别"
        },
        {
          "level": 3,
          "title": "栈简介",
          "slug": "栈简介-2"
        },
        {
          "level": 3,
          "title": "堆简介",
          "slug": "堆简介-2"
        }
      ]
    },
    {
      "title": "一、实现连续数字合并转换",
      "frontmatter": {},
      "regularPath": "/Components/dataStructureAndCount/DoCode.html",
      "relativePath": "Components/dataStructureAndCount/DoCode.md",
      "key": "v-30b9ade2",
      "path": "/Components/dataStructureAndCount/DoCode.html"
    },
    {
      "title": "找出出现次数最多的字符",
      "frontmatter": {},
      "regularPath": "/Components/dataStructureAndCount/count.html",
      "relativePath": "Components/dataStructureAndCount/count.md",
      "key": "v-33a06ec4",
      "path": "/Components/dataStructureAndCount/count.html",
      "headers": [
        {
          "level": 2,
          "title": "找出出现次数最多的字符",
          "slug": "找出出现次数最多的字符"
        },
        {
          "level": 2,
          "title": "JS实现二分查找",
          "slug": "js实现二分查找"
        },
        {
          "level": 2,
          "title": "null与undefined",
          "slug": "null与undefined"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Components/base/introduce.html",
      "relativePath": "Components/base/introduce.md",
      "key": "v-5948fc08",
      "path": "/Components/base/introduce.html"
    },
    {
      "title": "行内元素和块级元素",
      "frontmatter": {},
      "regularPath": "/Components/htmlcss/CSS.html",
      "relativePath": "Components/htmlcss/CSS.md",
      "key": "v-242e3c70",
      "path": "/Components/htmlcss/CSS.html"
    },
    {
      "title": "一、Flex布局表示弹性布局，为盒模型提供最大灵活性。",
      "frontmatter": {},
      "regularPath": "/Components/htmlcss/Flex.html",
      "relativePath": "Components/htmlcss/Flex.md",
      "key": "v-7fad3f62",
      "path": "/Components/htmlcss/Flex.html",
      "headers": [
        {
          "level": 2,
          "title": "一、Flex布局表示弹性布局，为盒模型提供最大灵活性。",
          "slug": "一、flex布局表示弹性布局-为盒模型提供最大灵活性。"
        },
        {
          "level": 2,
          "title": "二、flex 容器的一些属性",
          "slug": "二、flex-容器的一些属性"
        },
        {
          "level": 3,
          "title": "1.flex-direction",
          "slug": "_1-flex-direction"
        },
        {
          "level": 3,
          "title": "2.flex-wrap",
          "slug": "_2-flex-wrap"
        },
        {
          "level": 3,
          "title": "3.flex-flow",
          "slug": "_3-flex-flow"
        },
        {
          "level": 3,
          "title": "4.justify-content",
          "slug": "_4-justify-content"
        },
        {
          "level": 3,
          "title": "5.align-items",
          "slug": "_5-align-items"
        },
        {
          "level": 3,
          "title": "6.align-content",
          "slug": "_6-align-content"
        },
        {
          "level": 3,
          "title": "7.order 属性",
          "slug": "_7-order-属性"
        },
        {
          "level": 3,
          "title": "8.flex-grow 属性",
          "slug": "_8-flex-grow-属性"
        },
        {
          "level": 3,
          "title": "9.flex-shrink 属性",
          "slug": "_9-flex-shrink-属性"
        },
        {
          "level": 3,
          "title": "10.flex-basis",
          "slug": "_10-flex-basis"
        },
        {
          "level": 3,
          "title": "11.flex",
          "slug": "_11-flex"
        },
        {
          "level": 3,
          "title": "12.align-self属性",
          "slug": "_12-align-self属性"
        }
      ]
    },
    {
      "title": "Font样式",
      "frontmatter": {},
      "regularPath": "/Components/htmlcss/FontCss.html",
      "relativePath": "Components/htmlcss/FontCss.md",
      "key": "v-e4c77034",
      "path": "/Components/htmlcss/FontCss.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        }
      ]
    },
    {
      "title": "CSS选择器",
      "frontmatter": {},
      "regularPath": "/Components/htmlcss/Selector.html",
      "relativePath": "Components/htmlcss/Selector.md",
      "key": "v-221898bc",
      "path": "/Components/htmlcss/Selector.html",
      "headers": [
        {
          "level": 2,
          "title": "css属性选择器",
          "slug": "css属性选择器"
        },
        {
          "level": 3,
          "title": "伪类选择器：",
          "slug": "伪类选择器"
        },
        {
          "level": 3,
          "title": "伪元素选择器：",
          "slug": "伪元素选择器"
        },
        {
          "level": 3,
          "title": "属性选择器：",
          "slug": "属性选择器"
        },
        {
          "level": 3,
          "title": "在CSS3中新增的选择器有如下：",
          "slug": "在css3中新增的选择器有如下"
        },
        {
          "level": 2,
          "title": "优先级",
          "slug": "优先级"
        },
        {
          "level": 3,
          "title": "选择器权重",
          "slug": "选择器权重"
        },
        {
          "level": 2,
          "title": "属性继承",
          "slug": "属性继承"
        },
        {
          "level": 3,
          "title": "字体系列属性：",
          "slug": "字体系列属性"
        },
        {
          "level": 3,
          "title": "文本系列属性",
          "slug": "文本系列属性"
        },
        {
          "level": 3,
          "title": "表格布局属性",
          "slug": "表格布局属性"
        },
        {
          "level": 3,
          "title": "列表属性",
          "slug": "列表属性"
        },
        {
          "level": 3,
          "title": "引用",
          "slug": "引用"
        },
        {
          "level": 3,
          "title": "光标属性",
          "slug": "光标属性"
        },
        {
          "level": 2,
          "title": "无继承的属性",
          "slug": "无继承的属性"
        }
      ]
    },
    {
      "title": "前端实现动画的几种方式",
      "frontmatter": {},
      "regularPath": "/Components/htmlcss/animation.html",
      "relativePath": "Components/htmlcss/animation.md",
      "key": "v-60ad81f4",
      "path": "/Components/htmlcss/animation.html",
      "headers": [
        {
          "level": 2,
          "title": "前端实现动画的几种方式",
          "slug": "前端实现动画的几种方式"
        },
        {
          "level": 3,
          "title": "1. css3的transition",
          "slug": "_1-css3的transition"
        },
        {
          "level": 3,
          "title": "2. css3的animation",
          "slug": "_2-css3的animation"
        },
        {
          "level": 3,
          "title": "3. 原生JS动画",
          "slug": "_3-原生js动画"
        },
        {
          "level": 3,
          "title": "总结：",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "何为AST语法树？",
      "frontmatter": {},
      "regularPath": "/Components/javascript/AST.html",
      "relativePath": "Components/javascript/AST.md",
      "key": "v-738ea9e8",
      "path": "/Components/javascript/AST.html",
      "headers": [
        {
          "level": 2,
          "title": "何为AST语法树？",
          "slug": "何为ast语法树"
        },
        {
          "level": 2,
          "title": "AST是如何生成的",
          "slug": "ast是如何生成的"
        },
        {
          "level": 3,
          "title": "1. 分词",
          "slug": "_1-分词"
        },
        {
          "level": 3,
          "title": "2. 语义分析",
          "slug": "_2-语义分析"
        },
        {
          "level": 2,
          "title": "AST的具体应用",
          "slug": "ast的具体应用"
        },
        {
          "level": 3,
          "title": "vue模板编译过程",
          "slug": "vue模板编译过程"
        },
        {
          "level": 3,
          "title": "Prettier实现原理",
          "slug": "prettier实现原理"
        },
        {
          "level": 2,
          "title": "AST还能做什么",
          "slug": "ast还能做什么"
        }
      ]
    },
    {
      "title": "JavaScript的常用方法有哪些？",
      "frontmatter": {},
      "regularPath": "/Components/javascript/Array.html",
      "relativePath": "Components/javascript/Array.md",
      "key": "v-57833188",
      "path": "/Components/javascript/Array.html",
      "headers": [
        {
          "level": 2,
          "title": "JavaScript的常用方法有哪些？",
          "slug": "javascript的常用方法有哪些"
        },
        {
          "level": 2,
          "title": "一、操作方法",
          "slug": "一、操作方法"
        },
        {
          "level": 3,
          "title": "增",
          "slug": "增"
        },
        {
          "level": 3,
          "title": "删",
          "slug": "删"
        },
        {
          "level": 3,
          "title": "slice()",
          "slug": "slice"
        },
        {
          "level": 2,
          "title": "二、排序方法",
          "slug": "二、排序方法"
        },
        {
          "level": 3,
          "title": "reverse()",
          "slug": "reverse"
        },
        {
          "level": 3,
          "title": "sort()",
          "slug": "sort"
        },
        {
          "level": 2,
          "title": "三、转换方法",
          "slug": "三、转换方法"
        },
        {
          "level": 3,
          "title": "join()",
          "slug": "join"
        },
        {
          "level": 2,
          "title": "四、迭代方法",
          "slug": "四、迭代方法"
        },
        {
          "level": 3,
          "title": "some()",
          "slug": "some"
        },
        {
          "level": 3,
          "title": "every()",
          "slug": "every"
        },
        {
          "level": 3,
          "title": "forEach()",
          "slug": "foreach"
        },
        {
          "level": 3,
          "title": "filter()",
          "slug": "filter"
        },
        {
          "level": 3,
          "title": "map()",
          "slug": "map"
        }
      ]
    },
    {
      "title": "var、let、const",
      "frontmatter": {},
      "regularPath": "/Components/javascript/ESsix.html",
      "relativePath": "Components/javascript/ESsix.md",
      "key": "v-b0e78630",
      "path": "/Components/javascript/ESsix.html",
      "headers": [
        {
          "level": 2,
          "title": "var、let、const",
          "slug": "var、let、const"
        },
        {
          "level": 2,
          "title": "数组篇",
          "slug": "数组篇"
        },
        {
          "level": 2,
          "title": "ES5的几种继承方式",
          "slug": "es5的几种继承方式"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "实例对象新增的方法",
          "slug": "实例对象新增的方法"
        },
        {
          "level": 2,
          "title": "ES7~ES12",
          "slug": "es7-es12"
        },
        {
          "level": 3,
          "title": "ES2016(ES7)",
          "slug": "es2016-es7"
        },
        {
          "level": 3,
          "title": "ES2017(ES8)",
          "slug": "es2017-es8"
        },
        {
          "level": 3,
          "title": "ES2018(ES9)",
          "slug": "es2018-es9"
        },
        {
          "level": 3,
          "title": "Promise.prototype.finally()",
          "slug": "promise-prototype-finally"
        },
        {
          "level": 3,
          "title": "String 扩展",
          "slug": "string-扩展"
        },
        {
          "level": 3,
          "title": "ES2019(ES10)",
          "slug": "es2019-es10"
        },
        {
          "level": 3,
          "title": "Array.prototype.flat()",
          "slug": "array-prototype-flat"
        },
        {
          "level": 3,
          "title": "Array.prototype.flatMap()",
          "slug": "array-prototype-flatmap"
        },
        {
          "level": 3,
          "title": "ES2020(ES11)",
          "slug": "es2020-es11"
        },
        {
          "level": 3,
          "title": "Dynamic Import（按需 import）",
          "slug": "dynamic-import-按需-import"
        },
        {
          "level": 3,
          "title": "ES2021(ES12)",
          "slug": "es2021-es12"
        }
      ]
    },
    {
      "title": "递归实现无限树型结构",
      "frontmatter": {},
      "regularPath": "/Components/javascript/RecursionTree.html",
      "relativePath": "Components/javascript/RecursionTree.md",
      "key": "v-1c79e368",
      "path": "/Components/javascript/RecursionTree.html",
      "headers": [
        {
          "level": 2,
          "title": "递归实现无限树型结构",
          "slug": "递归实现无限树型结构"
        }
      ]
    },
    {
      "title": "JavaScript的错误类型",
      "frontmatter": {},
      "regularPath": "/Components/javascript/TypeError.html",
      "relativePath": "Components/javascript/TypeError.md",
      "key": "v-7eb0eba8",
      "path": "/Components/javascript/TypeError.html",
      "headers": [
        {
          "level": 3,
          "title": "Error",
          "slug": "error"
        },
        {
          "level": 3,
          "title": "EvalError",
          "slug": "evalerror"
        },
        {
          "level": 3,
          "title": "RangeError",
          "slug": "rangeerror"
        },
        {
          "level": 3,
          "title": "ReferenceError",
          "slug": "referenceerror"
        },
        {
          "level": 3,
          "title": "SyntaxError",
          "slug": "syntaxerror"
        },
        {
          "level": 3,
          "title": "TypeError",
          "slug": "typeerror"
        },
        {
          "level": 3,
          "title": "URIError",
          "slug": "urierror"
        }
      ]
    },
    {
      "title": "JavaScript 的常用方法",
      "frontmatter": {},
      "regularPath": "/Components/javascript/base.html",
      "relativePath": "Components/javascript/base.md",
      "key": "v-5a19bdc0",
      "path": "/Components/javascript/base.html",
      "headers": [
        {
          "level": 2,
          "title": "一、String类型",
          "slug": "一、string类型"
        },
        {
          "level": 3,
          "title": "1.charAt",
          "slug": "_1-charat"
        },
        {
          "level": 3,
          "title": "2.chartCodeAt()",
          "slug": "_2-chartcodeat"
        },
        {
          "level": 3,
          "title": "3.concat()",
          "slug": "_3-concat"
        },
        {
          "level": 3,
          "title": "4.indexOf()",
          "slug": "_4-indexof"
        },
        {
          "level": 3,
          "title": "5.match()",
          "slug": "_5-match"
        },
        {
          "level": 3,
          "title": "6.replace()",
          "slug": "_6-replace"
        },
        {
          "level": 3,
          "title": "7.search():",
          "slug": "_7-search"
        },
        {
          "level": 3,
          "title": "8.slice()",
          "slug": "_8-slice"
        },
        {
          "level": 3,
          "title": "9.split():",
          "slug": "_9-split"
        },
        {
          "level": 3,
          "title": "10.toLocaleLowerCase()",
          "slug": "_10-tolocalelowercase"
        },
        {
          "level": 3,
          "title": "11.toLocaleUpperCase()",
          "slug": "_11-tolocaleuppercase"
        },
        {
          "level": 3,
          "title": "12.substr()",
          "slug": "_12-substr"
        },
        {
          "level": 3,
          "title": "13.subString()",
          "slug": "_13-substring"
        },
        {
          "level": 2,
          "title": "二、数组 Array",
          "slug": "二、数组-array"
        },
        {
          "level": 3,
          "title": "1.slice[start,end]",
          "slug": "_1-slice-start-end"
        },
        {
          "level": 3,
          "title": "2.splice():",
          "slug": "_2-splice"
        },
        {
          "level": 3,
          "title": "3.pop()",
          "slug": "_3-pop"
        },
        {
          "level": 3,
          "title": "4.push()",
          "slug": "_4-push"
        },
        {
          "level": 3,
          "title": "5.shift()",
          "slug": "_5-shift"
        },
        {
          "level": 3,
          "title": "6.unshift()",
          "slug": "_6-unshift"
        },
        {
          "level": 3,
          "title": "7.sort()",
          "slug": "_7-sort"
        },
        {
          "level": 3,
          "title": "8.concat(3,4)",
          "slug": "_8-concat-3-4"
        },
        {
          "level": 3,
          "title": "9.join()",
          "slug": "_9-join"
        },
        {
          "level": 3,
          "title": "10.indexOf()",
          "slug": "_10-indexof"
        },
        {
          "level": 3,
          "title": "11.foeEach()",
          "slug": "_11-foeeach"
        },
        {
          "level": 3,
          "title": "12.map",
          "slug": "_12-map"
        },
        {
          "level": 3,
          "title": "13.for in",
          "slug": "_13-for-in"
        },
        {
          "level": 2,
          "title": "三、ES5-every和some方法：",
          "slug": "三、es5-every和some方法"
        },
        {
          "level": 3,
          "title": "1.every",
          "slug": "_1-every"
        },
        {
          "level": 3,
          "title": "2.some",
          "slug": "_2-some"
        },
        {
          "level": 3,
          "title": "3.Array.isArray(obj)",
          "slug": "_3-array-isarray-obj"
        },
        {
          "level": 3,
          "title": "4.filter(function(element))",
          "slug": "_4-filter-function-element"
        },
        {
          "level": 3,
          "title": "5.reduce or reduceRight",
          "slug": "_5-reduce-or-reduceright"
        },
        {
          "level": 2,
          "title": "四、Object和map的区别",
          "slug": "四、object和map的区别"
        },
        {
          "level": 3,
          "title": "访问",
          "slug": "访问"
        },
        {
          "level": 3,
          "title": "删除",
          "slug": "删除"
        },
        {
          "level": 3,
          "title": "迭代",
          "slug": "迭代"
        },
        {
          "level": 2,
          "title": "五、postmessage的使用场景",
          "slug": "五、postmessage的使用场景"
        },
        {
          "level": 3,
          "title": "例子",
          "slug": "例子"
        },
        {
          "level": 2,
          "title": "六、e.target和e.currentTarget有什么区别",
          "slug": "六、e-target和e-currenttarget有什么区别"
        },
        {
          "level": 2,
          "title": "addEventListener",
          "slug": "addeventlistener"
        },
        {
          "level": 3,
          "title": "true",
          "slug": "true"
        },
        {
          "level": 2,
          "title": "七、浏览器的Width和height",
          "slug": "七、浏览器的width和height"
        }
      ]
    },
    {
      "title": "浅拷贝与深拷贝",
      "frontmatter": {},
      "regularPath": "/Components/javascript/clone.html",
      "relativePath": "Components/javascript/clone.md",
      "key": "v-553ac608",
      "path": "/Components/javascript/clone.html",
      "headers": [
        {
          "level": 2,
          "title": "1.对象的深拷贝",
          "slug": "_1-对象的深拷贝"
        },
        {
          "level": 2,
          "title": "2.数组的深拷贝方法",
          "slug": "_2-数组的深拷贝方法"
        },
        {
          "level": 2,
          "title": "3.多维数组实现深拷贝",
          "slug": "_3-多维数组实现深拷贝"
        }
      ]
    },
    {
      "title": "一. 如何获取浏览器URL中查询字符串中的参数？",
      "frontmatter": {},
      "regularPath": "/Components/javascript/extends.html",
      "relativePath": "Components/javascript/extends.md",
      "key": "v-45f51488",
      "path": "/Components/javascript/extends.html",
      "headers": [
        {
          "level": 2,
          "title": "一. 如何获取浏览器URL中查询字符串中的参数？",
          "slug": "一-如何获取浏览器url中查询字符串中的参数"
        },
        {
          "level": 2,
          "title": "二. js实现一个打点计时器",
          "slug": "二-js实现一个打点计时器"
        },
        {
          "level": 3,
          "title": "setTimeout方法",
          "slug": "settimeout方法"
        },
        {
          "level": 3,
          "title": "setInterval()方法",
          "slug": "setinterval-方法"
        },
        {
          "level": 2,
          "title": "三. 用js实现一个标准的排序算法",
          "slug": "三-用js实现一个标准的排序算法"
        },
        {
          "level": 3,
          "title": "冒泡排序",
          "slug": "冒泡排序"
        },
        {
          "level": 2,
          "title": "四.防抖节流",
          "slug": "四-防抖节流"
        },
        {
          "level": 2,
          "title": "五、加载白屏时间长的原因有哪些，如何优化？",
          "slug": "五、加载白屏时间长的原因有哪些-如何优化"
        },
        {
          "level": 3,
          "title": "三、白屏的过程",
          "slug": "三、白屏的过程"
        },
        {
          "level": 2,
          "title": "六、如何预防用户快速连续点击，造成数据多次提交",
          "slug": "六、如何预防用户快速连续点击-造成数据多次提交"
        },
        {
          "level": 2,
          "title": "七、如何判断是PC还是移动端访问",
          "slug": "七、如何判断是pc还是移动端访问"
        },
        {
          "level": 3,
          "title": "一、navigator.userAgent",
          "slug": "一、navigator-useragent"
        },
        {
          "level": 3,
          "title": "二、window.screen，window.innerWidth",
          "slug": "二、window-screen-window-innerwidth"
        },
        {
          "level": 3,
          "title": "三、window.orientation",
          "slug": "三、window-orientation"
        },
        {
          "level": 3,
          "title": "四、touch 事件",
          "slug": "四、touch-事件"
        },
        {
          "level": 3,
          "title": "五、window.matchMedia()",
          "slug": "五、window-matchmedia"
        },
        {
          "level": 3,
          "title": "六、工具包",
          "slug": "六、工具包"
        },
        {
          "level": 2,
          "title": "八、如何使用js生成海报",
          "slug": "八、如何使用js生成海报"
        },
        {
          "level": 3,
          "title": "方案一：DOM->canvas->image",
          "slug": "方案一-dom-canvas-image"
        },
        {
          "level": 3,
          "title": "方案二：DOM->svg->canvas->image",
          "slug": "方案二-dom-svg-canvas-image"
        },
        {
          "level": 3,
          "title": "方案三：使用NodeJS 调用浏览器方法",
          "slug": "方案三-使用nodejs-调用浏览器方法"
        },
        {
          "level": 2,
          "title": "九、如何获取页面滚动距离",
          "slug": "九、如何获取页面滚动距离"
        },
        {
          "level": 2,
          "title": "十、如何顺序执行10个异步任务",
          "slug": "十、如何顺序执行10个异步任务"
        },
        {
          "level": 3,
          "title": "解法1：for 循环 + await",
          "slug": "解法1-for-循环-await"
        },
        {
          "level": 2,
          "title": "解法2：Array.prototype.reduce",
          "slug": "解法2-array-prototype-reduce"
        }
      ]
    },
    {
      "title": "工厂模式",
      "frontmatter": {},
      "regularPath": "/Components/javascript/designPatterns.html",
      "relativePath": "Components/javascript/designPatterns.md",
      "key": "v-3130f0e0",
      "path": "/Components/javascript/designPatterns.html",
      "headers": [
        {
          "level": 2,
          "title": "工厂模式",
          "slug": "工厂模式"
        },
        {
          "level": 2,
          "title": "单例模式",
          "slug": "单例模式"
        },
        {
          "level": 2,
          "title": "代理模式",
          "slug": "代理模式"
        },
        {
          "level": 2,
          "title": "职责链模式",
          "slug": "职责链模式"
        },
        {
          "level": 2,
          "title": "装饰者模式",
          "slug": "装饰者模式"
        },
        {
          "level": 2,
          "title": "观察者-发布订阅模式",
          "slug": "观察者-发布订阅模式"
        }
      ]
    },
    {
      "title": "CSS",
      "frontmatter": {},
      "regularPath": "/Components/md_interview/Interview.html",
      "relativePath": "Components/md_interview/Interview.md",
      "key": "v-f02bda70",
      "path": "/Components/md_interview/Interview.html"
    },
    {
      "title": "前端性能监控",
      "frontmatter": {},
      "regularPath": "/Components/performance/BorserPerformance.html",
      "relativePath": "Components/performance/BorserPerformance.md",
      "key": "v-0ec807b4",
      "path": "/Components/performance/BorserPerformance.html",
      "headers": [
        {
          "level": 2,
          "title": "前端性能监控",
          "slug": "前端性能监控"
        },
        {
          "level": 2,
          "title": "性能指标",
          "slug": "性能指标"
        },
        {
          "level": 2,
          "title": "window.performance基础",
          "slug": "window-performance基础"
        },
        {
          "level": 2,
          "title": "各指标计算方式",
          "slug": "各指标计算方式"
        }
      ]
    },
    {
      "title": "大型文件上传",
      "frontmatter": {},
      "regularPath": "/Components/javascript/fileUpload.html",
      "relativePath": "Components/javascript/fileUpload.md",
      "key": "v-ade7a7b0",
      "path": "/Components/javascript/fileUpload.html",
      "headers": [
        {
          "level": 2,
          "title": "大型文件上传",
          "slug": "大型文件上传"
        },
        {
          "level": 3,
          "title": "前端怎么对资源进行分块？",
          "slug": "前端怎么对资源进行分块"
        },
        {
          "level": 3,
          "title": "服务端怎么知道什么时候要整合资源？如何保证资源整合的有序性？",
          "slug": "服务端怎么知道什么时候要整合资源-如何保证资源整合的有序性"
        },
        {
          "level": 3,
          "title": "如果某个分块的上传请求失败了，怎么办？",
          "slug": "如果某个分块的上传请求失败了-怎么办"
        },
        {
          "level": 3,
          "title": "请求模块",
          "slug": "请求模块"
        },
        {
          "level": 3,
          "title": "文件资源分块",
          "slug": "文件资源分块"
        },
        {
          "level": 3,
          "title": "发送上传请求和合并请求",
          "slug": "发送上传请求和合并请求"
        },
        {
          "level": 3,
          "title": "进度条数据",
          "slug": "进度条数据"
        },
        {
          "level": 2,
          "title": "服务端部分",
          "slug": "服务端部分"
        },
        {
          "level": 3,
          "title": "搭建服务",
          "slug": "搭建服务"
        },
        {
          "level": 3,
          "title": "接收分块",
          "slug": "接收分块"
        },
        {
          "level": 3,
          "title": "整合分块",
          "slug": "整合分块"
        },
        {
          "level": 2,
          "title": "扩展之断点续传&秒传",
          "slug": "扩展之断点续传-秒传"
        },
        {
          "level": 3,
          "title": "断点续传",
          "slug": "断点续传"
        },
        {
          "level": 3,
          "title": "秒传",
          "slug": "秒传"
        }
      ]
    },
    {
      "title": "Vue",
      "frontmatter": {},
      "regularPath": "/Components/md_view/vue.html",
      "relativePath": "Components/md_view/vue.md",
      "key": "v-4f7a0fd8",
      "path": "/Components/md_view/vue.html",
      "headers": [
        {
          "level": 2,
          "title": "（1）什么是vue生命周期?",
          "slug": "_1-什么是vue生命周期"
        },
        {
          "level": 3,
          "title": "（2）vue生命周期的作用是什么?",
          "slug": "_2-vue生命周期的作用是什么"
        },
        {
          "level": 3,
          "title": "（3）vue生命周期总共有几个阶段?",
          "slug": "_3-vue生命周期总共有几个阶段"
        },
        {
          "level": 3,
          "title": "（4）第一次页面加载会触发哪几个钩子?",
          "slug": "_4-第一次页面加载会触发哪几个钩子"
        },
        {
          "level": 3,
          "title": "（5）DOM 渲染在 哪个周期中就已经完成?",
          "slug": "_5-dom-渲染在-哪个周期中就已经完成"
        },
        {
          "level": 3,
          "title": "（6）简单描述每个周期具体适合哪些场景?",
          "slug": "_6-简单描述每个周期具体适合哪些场景"
        },
        {
          "level": 2,
          "title": "axios的方法和请求响应数据结构",
          "slug": "axios的方法和请求响应数据结构"
        },
        {
          "level": 3,
          "title": "请求方法别名",
          "slug": "请求方法别名"
        },
        {
          "level": 3,
          "title": "相应数据结构",
          "slug": "相应数据结构"
        },
        {
          "level": 2,
          "title": "在VUE中封装axios",
          "slug": "在vue中封装axios"
        },
        {
          "level": 3,
          "title": "请求响应之then  catch",
          "slug": "请求响应之then-catch"
        },
        {
          "level": 2,
          "title": "Vuex状态管理",
          "slug": "vuex状态管理"
        },
        {
          "level": 2,
          "title": "VUE中router的钩子函数",
          "slug": "vue中router的钩子函数"
        },
        {
          "level": 2,
          "title": "ES6的基本知识",
          "slug": "es6的基本知识"
        },
        {
          "level": 2,
          "title": "Promise",
          "slug": "promise"
        },
        {
          "level": 2,
          "title": "vue store存储commit和dispatch",
          "slug": "vue-store存储commit和dispatch"
        },
        {
          "level": 2,
          "title": "vue  路由导航",
          "slug": "vue-路由导航"
        },
        {
          "level": 2,
          "title": "vue中computed和method 区别",
          "slug": "vue中computed和method-区别"
        }
      ]
    },
    {
      "title": "Web的缓存机制",
      "frontmatter": {},
      "regularPath": "/Components/performance/Browser.html",
      "relativePath": "Components/performance/Browser.md",
      "key": "v-3487cc0e",
      "path": "/Components/performance/Browser.html",
      "headers": [
        {
          "level": 2,
          "title": "Web的缓存机制",
          "slug": "web的缓存机制"
        },
        {
          "level": 3,
          "title": "缓存解决的问题：",
          "slug": "缓存解决的问题"
        },
        {
          "level": 3,
          "title": "As Total",
          "slug": "as-total"
        },
        {
          "level": 2,
          "title": "BOM的理解以及BOM对象有哪些？",
          "slug": "bom的理解以及bom对象有哪些"
        },
        {
          "level": 2,
          "title": "常见的DOM操作",
          "slug": "常见的dom操作"
        },
        {
          "level": 3,
          "title": "获取节点",
          "slug": "获取节点"
        }
      ]
    },
    {
      "title": "前端性能优化",
      "frontmatter": {},
      "regularPath": "/Components/performance/Performance.html",
      "relativePath": "Components/performance/Performance.md",
      "key": "v-49d307fe",
      "path": "/Components/performance/Performance.html"
    },
    {
      "title": "WebWorker",
      "frontmatter": {},
      "regularPath": "/Components/performance/WebWorker.html",
      "relativePath": "Components/performance/WebWorker.md",
      "key": "v-bb20220c",
      "path": "/Components/performance/WebWorker.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        }
      ]
    },
    {
      "title": "一、何为dangerouslySetInnerHtml？",
      "frontmatter": {},
      "regularPath": "/Components/react/Reacthooks.html",
      "relativePath": "Components/react/Reacthooks.md",
      "key": "v-3283f1c2",
      "path": "/Components/react/Reacthooks.html",
      "headers": [
        {
          "level": 2,
          "title": "一、何为dangerouslySetInnerHtml？",
          "slug": "一、何为dangerouslysetinnerhtml"
        },
        {
          "level": 2,
          "title": "二、常用React Hooks有哪些？",
          "slug": "二、常用react-hooks有哪些"
        }
      ]
    },
    {
      "title": "React中可以做的性能优化？",
      "frontmatter": {},
      "regularPath": "/Components/react/ReactPerfomance.html",
      "relativePath": "Components/react/ReactPerfomance.md",
      "key": "v-6b4b15d4",
      "path": "/Components/react/ReactPerfomance.html",
      "headers": [
        {
          "level": 2,
          "title": "React中可以做的性能优化？",
          "slug": "react中可以做的性能优化"
        }
      ]
    },
    {
      "title": "初识 React",
      "frontmatter": {},
      "regularPath": "/Components/react/base.html",
      "relativePath": "Components/react/base.md",
      "key": "v-c4d5817c",
      "path": "/Components/react/base.html",
      "headers": [
        {
          "level": 2,
          "title": "初识 React",
          "slug": "初识-react"
        },
        {
          "level": 3,
          "title": "特性：",
          "slug": "特性"
        },
        {
          "level": 3,
          "title": "React-Component",
          "slug": "react-component"
        },
        {
          "level": 3,
          "title": "组件的特点：",
          "slug": "组件的特点"
        },
        {
          "level": 3,
          "title": "React 的优势",
          "slug": "react-的优势"
        },
        {
          "level": 2,
          "title": "React 的生命周期",
          "slug": "react-的生命周期"
        },
        {
          "level": 2,
          "title": "Redux 和 Vuex 区别",
          "slug": "redux-和-vuex-区别"
        },
        {
          "level": 2,
          "title": "共同思想",
          "slug": "共同思想"
        },
        {
          "level": 2,
          "title": "Redux 中的 connect 有什么作用？",
          "slug": "redux-中的-connect-有什么作用"
        },
        {
          "level": 2,
          "title": "Redux 状态管理和变量挂载在 window中的区别",
          "slug": "redux-状态管理和变量挂载在-window中的区别"
        }
      ]
    },
    {
      "title": "Button",
      "frontmatter": {},
      "regularPath": "/Components/static/Button.html",
      "relativePath": "Components/static/Button.md",
      "key": "v-7b1a1b00",
      "path": "/Components/static/Button.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        }
      ]
    },
    {
      "title": "Icon",
      "frontmatter": {},
      "regularPath": "/Components/static/Icon.html",
      "relativePath": "Components/static/Icon.md",
      "key": "v-84328e1c",
      "path": "/Components/static/Icon.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        }
      ]
    },
    {
      "title": "幸运大乐透之刮刮乐",
      "frontmatter": {},
      "regularPath": "/Components/static/IconStyle.html",
      "relativePath": "Components/static/IconStyle.md",
      "key": "v-d504b7f0",
      "path": "/Components/static/IconStyle.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        }
      ]
    },
    {
      "title": "幸运大乐透之刮刮乐",
      "frontmatter": {},
      "regularPath": "/Components/static/GuaguaLe.html",
      "relativePath": "Components/static/GuaguaLe.md",
      "key": "v-415c1e1c",
      "path": "/Components/static/GuaguaLe.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        }
      ]
    },
    {
      "title": "幸运大乐透之刮刮乐",
      "frontmatter": {},
      "regularPath": "/Components/static/LuckyRolling.html",
      "relativePath": "Components/static/LuckyRolling.md",
      "key": "v-d562572c",
      "path": "/Components/static/LuckyRolling.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        },
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示-2"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api-2"
        }
      ]
    },
    {
      "title": "放大镜",
      "frontmatter": {},
      "regularPath": "/Components/static/MagnifyingGlass.html",
      "relativePath": "Components/static/MagnifyingGlass.md",
      "key": "v-2e8f0328",
      "path": "/Components/static/MagnifyingGlass.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        }
      ]
    },
    {
      "title": "Axios封装",
      "frontmatter": {},
      "regularPath": "/Components/vue/Axios.html",
      "relativePath": "Components/vue/Axios.md",
      "key": "v-0d994ec6",
      "path": "/Components/vue/Axios.html",
      "headers": [
        {
          "level": 2,
          "title": "Axios封装",
          "slug": "axios封装"
        },
        {
          "level": 3,
          "title": "设置接口请求前缀",
          "slug": "设置接口请求前缀"
        },
        {
          "level": 3,
          "title": "设置请求头与超时时间",
          "slug": "设置请求头与超时时间"
        },
        {
          "level": 3,
          "title": "封装请求方法",
          "slug": "封装请求方法"
        },
        {
          "level": 3,
          "title": "请求拦截器",
          "slug": "请求拦截器"
        },
        {
          "level": 3,
          "title": "响应拦截器",
          "slug": "响应拦截器"
        }
      ]
    },
    {
      "title": "滑块验证",
      "frontmatter": {},
      "regularPath": "/Components/static/SlideVerify.html",
      "relativePath": "Components/static/SlideVerify.md",
      "key": "v-1aced8c8",
      "path": "/Components/static/SlideVerify.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "Detail",
          "slug": "detail"
        }
      ]
    },
    {
      "title": "瀑布流",
      "frontmatter": {},
      "regularPath": "/Components/static/Pinterest.html",
      "relativePath": "Components/static/Pinterest.md",
      "key": "v-b35c4f70",
      "path": "/Components/static/Pinterest.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        }
      ]
    },
    {
      "title": "SPA(单页应用)  首屏加载速度慢怎么解决",
      "frontmatter": {},
      "regularPath": "/Components/vue/FirstLoad.html",
      "relativePath": "Components/vue/FirstLoad.md",
      "key": "v-b954e374",
      "path": "/Components/vue/FirstLoad.html",
      "headers": [
        {
          "level": 2,
          "title": "SPA(单页应用)  首屏加载速度慢怎么解决",
          "slug": "spa-单页应用-首屏加载速度慢怎么解决"
        },
        {
          "level": 3,
          "title": "一、加载慢的原因",
          "slug": "一、加载慢的原因"
        },
        {
          "level": 3,
          "title": "三、解决方案",
          "slug": "三、解决方案"
        },
        {
          "level": 3,
          "title": "减小入口文件体积",
          "slug": "减小入口文件体积"
        },
        {
          "level": 3,
          "title": "静态资源本地缓存",
          "slug": "静态资源本地缓存"
        },
        {
          "level": 3,
          "title": "UI框架按需加载",
          "slug": "ui框架按需加载"
        },
        {
          "level": 3,
          "title": "组件重复打包",
          "slug": "组件重复打包"
        },
        {
          "level": 3,
          "title": "图片资源的压缩",
          "slug": "图片资源的压缩"
        },
        {
          "level": 3,
          "title": "开启GZip压缩",
          "slug": "开启gzip压缩"
        },
        {
          "level": 3,
          "title": "使用SSR",
          "slug": "使用ssr"
        }
      ]
    },
    {
      "title": "一、组合式API",
      "frontmatter": {},
      "regularPath": "/Components/vue/Vuethree.html",
      "relativePath": "Components/vue/Vuethree.md",
      "key": "v-f40bc0fc",
      "path": "/Components/vue/Vuethree.html",
      "headers": [
        {
          "level": 3,
          "title": "Setup():",
          "slug": "setup"
        },
        {
          "level": 3,
          "title": "`ref()`:",
          "slug": "ref"
        },
        {
          "level": 3,
          "title": "computed():",
          "slug": "computed"
        },
        {
          "level": 3,
          "title": "reactive():",
          "slug": "reactive"
        },
        {
          "level": 3,
          "title": "readonly():",
          "slug": "readonly"
        },
        {
          "level": 3,
          "title": "`watchEffect():`",
          "slug": "watcheffect"
        },
        {
          "level": 3,
          "title": "`watchPostEffect()`:",
          "slug": "watchposteffect"
        },
        {
          "level": 3,
          "title": "`watchasyncEffect()`:",
          "slug": "watchasynceffect"
        },
        {
          "level": 3,
          "title": "watch():",
          "slug": "watch"
        },
        {
          "level": 3,
          "title": "`isRef()`:",
          "slug": "isref"
        },
        {
          "level": 3,
          "title": "`unRef()`:",
          "slug": "unref"
        },
        {
          "level": 3,
          "title": "`toRef()`:",
          "slug": "toref"
        },
        {
          "level": 3,
          "title": "`isProxy`:",
          "slug": "isproxy"
        },
        {
          "level": 3,
          "title": "`isReactive`:",
          "slug": "isreactive"
        },
        {
          "level": 3,
          "title": "`isReadonly()`:",
          "slug": "isreadonly"
        },
        {
          "level": 3,
          "title": "shallowRef():",
          "slug": "shallowref"
        },
        {
          "level": 3,
          "title": "`triggerRef():`",
          "slug": "triggerref"
        },
        {
          "level": 3,
          "title": "`customRef()`",
          "slug": "customref"
        },
        {
          "level": 3,
          "title": "shallowReactive():",
          "slug": "shallowreactive"
        },
        {
          "level": 3,
          "title": "`shallowReadonly()`:",
          "slug": "shallowreadonly"
        },
        {
          "level": 3,
          "title": "`toRaw()`:",
          "slug": "toraw"
        },
        {
          "level": 3,
          "title": "`markRaw()`:",
          "slug": "markraw"
        },
        {
          "level": 3,
          "title": "`effectScope()`:",
          "slug": "effectscope"
        },
        {
          "level": 3,
          "title": "`getCurrentScope()`：",
          "slug": "getcurrentscope"
        },
        {
          "level": 3,
          "title": "`onScopeDispose()`:",
          "slug": "onscopedispose"
        },
        {
          "level": 3,
          "title": "使用方法",
          "slug": "使用方法"
        },
        {
          "level": 3,
          "title": "一、Object.defineProperty",
          "slug": "一、object-defineproperty"
        },
        {
          "level": 3,
          "title": "1.编译阶段",
          "slug": "_1-编译阶段"
        },
        {
          "level": 3,
          "title": "2.源码体积",
          "slug": "_2-源码体积"
        },
        {
          "level": 3,
          "title": "3.响应式系统",
          "slug": "_3-响应式系统"
        }
      ]
    },
    {
      "title": "Button",
      "frontmatter": {},
      "regularPath": "/Components/static/Message.html",
      "relativePath": "Components/static/Message.md",
      "key": "v-4d070ab0",
      "path": "/Components/static/Message.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        },
        {
          "level": 2,
          "title": "API",
          "slug": "api"
        }
      ]
    },
    {
      "title": "Vue",
      "frontmatter": {},
      "regularPath": "/Components/vue/base.html",
      "relativePath": "Components/vue/base.md",
      "key": "v-44a85ebc",
      "path": "/Components/vue/base.html",
      "headers": [
        {
          "level": 2,
          "title": "Vue",
          "slug": "vue"
        },
        {
          "level": 3,
          "title": "（1）什么是vue生命周期?",
          "slug": "_1-什么是vue生命周期"
        },
        {
          "level": 3,
          "title": "（2）vue生命周期的作用是什么?",
          "slug": "_2-vue生命周期的作用是什么"
        },
        {
          "level": 3,
          "title": "（3）vue生命周期总共有几个阶段?",
          "slug": "_3-vue生命周期总共有几个阶段"
        },
        {
          "level": 3,
          "title": "（4）第一次页面加载会触发哪几个钩子?",
          "slug": "_4-第一次页面加载会触发哪几个钩子"
        },
        {
          "level": 3,
          "title": "（5）DOM 渲染在 哪个周期中就已经完成?",
          "slug": "_5-dom-渲染在-哪个周期中就已经完成"
        },
        {
          "level": 3,
          "title": "（6）简单描述每个周期具体适合哪些场景?",
          "slug": "_6-简单描述每个周期具体适合哪些场景"
        },
        {
          "level": 2,
          "title": "axios的方法和请求响应数据结构",
          "slug": "axios的方法和请求响应数据结构"
        },
        {
          "level": 3,
          "title": "请求方法别名",
          "slug": "请求方法别名"
        },
        {
          "level": 3,
          "title": "相应数据结构",
          "slug": "相应数据结构"
        },
        {
          "level": 2,
          "title": "Vuex状态管理",
          "slug": "vuex状态管理"
        },
        {
          "level": 2,
          "title": "VUE中router的钩子函数",
          "slug": "vue中router的钩子函数"
        },
        {
          "level": 2,
          "title": "ES6的基本知识",
          "slug": "es6的基本知识"
        },
        {
          "level": 2,
          "title": "Promise",
          "slug": "promise"
        },
        {
          "level": 2,
          "title": "vue store存储commit和dispatch",
          "slug": "vue-store存储commit和dispatch"
        },
        {
          "level": 2,
          "title": "vue  路由导航",
          "slug": "vue-路由导航"
        },
        {
          "level": 2,
          "title": "vue中computed和method 区别",
          "slug": "vue中computed和method-区别"
        },
        {
          "level": 2,
          "title": "跨域解决方式",
          "slug": "跨域解决方式"
        },
        {
          "level": 3,
          "title": "CORS",
          "slug": "cors"
        },
        {
          "level": 3,
          "title": "Proxy",
          "slug": "proxy"
        },
        {
          "level": 3,
          "title": "JSONP",
          "slug": "jsonp"
        },
        {
          "level": 2,
          "title": "权限控制",
          "slug": "权限控制"
        },
        {
          "level": 3,
          "title": "接口权限",
          "slug": "接口权限"
        },
        {
          "level": 3,
          "title": "路由权限控制",
          "slug": "路由权限控制"
        },
        {
          "level": 3,
          "title": "菜单权限",
          "slug": "菜单权限"
        },
        {
          "level": 3,
          "title": "按钮权限",
          "slug": "按钮权限"
        },
        {
          "level": 2,
          "title": "Vue常用修饰符和应用场景",
          "slug": "vue常用修饰符和应用场景"
        },
        {
          "level": 3,
          "title": "二、修饰符的作用",
          "slug": "二、修饰符的作用"
        },
        {
          "level": 3,
          "title": "事件修饰符",
          "slug": "事件修饰符"
        },
        {
          "level": 3,
          "title": "鼠标按钮修饰符",
          "slug": "鼠标按钮修饰符"
        },
        {
          "level": 3,
          "title": "v-bind修饰符",
          "slug": "v-bind修饰符"
        },
        {
          "level": 2,
          "title": "NextTick",
          "slug": "nexttick"
        },
        {
          "level": 2,
          "title": "Vue双向绑定",
          "slug": "vue双向绑定"
        },
        {
          "level": 2,
          "title": "Vue组件通信方案",
          "slug": "vue组件通信方案"
        },
        {
          "level": 3,
          "title": "$attrs 与$ listeners",
          "slug": "attrs-与-listeners"
        },
        {
          "level": 2,
          "title": "Vue中给对象添加新属性时，界面不刷新的问题",
          "slug": "vue中给对象添加新属性时-界面不刷新的问题"
        },
        {
          "level": 3,
          "title": "Vue.set()",
          "slug": "vue-set"
        },
        {
          "level": 3,
          "title": "Object.assign()",
          "slug": "object-assign"
        },
        {
          "level": 3,
          "title": "$forceUpdate",
          "slug": "forceupdate"
        },
        {
          "level": 3,
          "title": "小结",
          "slug": "小结"
        }
      ]
    },
    {
      "title": "自定义指令",
      "frontmatter": {},
      "regularPath": "/Components/vue/directive.html",
      "relativePath": "Components/vue/directive.md",
      "key": "v-40ea6b94",
      "path": "/Components/vue/directive.html",
      "headers": [
        {
          "level": 2,
          "title": "自定义指令",
          "slug": "自定义指令"
        },
        {
          "level": 3,
          "title": "二、如何实现",
          "slug": "二、如何实现"
        },
        {
          "level": 3,
          "title": "三、应用场景",
          "slug": "三、应用场景"
        }
      ]
    },
    {
      "title": "一、数据驱动",
      "frontmatter": {},
      "regularPath": "/Components/vue/code.html",
      "relativePath": "Components/vue/code.md",
      "key": "v-acdf3fbc",
      "path": "/Components/vue/code.html",
      "headers": [
        {
          "level": 2,
          "title": "一、数据驱动",
          "slug": "一、数据驱动"
        },
        {
          "level": 2,
          "title": "二、vue初始化",
          "slug": "二、vue初始化"
        },
        {
          "level": 3,
          "title": "",
          "slug": ""
        },
        {
          "level": 3,
          "title": "",
          "slug": "-2"
        },
        {
          "level": 2,
          "title": "三、mount 挂载",
          "slug": "三、mount-挂载"
        },
        {
          "level": 2,
          "title": "四、组件化",
          "slug": "四、组件化"
        },
        {
          "level": 2,
          "title": "五、如何让数据变得可观测？",
          "slug": "五、如何让数据变得可观测"
        },
        {
          "level": 2,
          "title": "六、Diff算法",
          "slug": "六、diff算法"
        },
        {
          "level": 2,
          "title": "七、Vue模板是如何编译的",
          "slug": "七、vue模板是如何编译的"
        },
        {
          "level": 2,
          "title": "八、模板编译",
          "slug": "八、模板编译"
        },
        {
          "level": 2,
          "title": "九、Vue中style标签中的scoped是如何工作的",
          "slug": "九、vue中style标签中的scoped是如何工作的"
        },
        {
          "level": 2,
          "title": "十、Vue3怎么设置全局变量",
          "slug": "十、vue3怎么设置全局变量"
        },
        {
          "level": 2,
          "title": "十一、刷新浏览器后，Vuex的数据是否存在？如何解决？",
          "slug": "十一、刷新浏览器后-vuex的数据是否存在-如何解决"
        },
        {
          "level": 3,
          "title": "vuex-along的使用方法",
          "slug": "vuex-along的使用方法"
        },
        {
          "level": 2,
          "title": "使用 localStorage 或者 sessionStroage",
          "slug": "使用-localstorage-或者-sessionstroage"
        },
        {
          "level": 2,
          "title": "十二、Vite",
          "slug": "十二、vite"
        },
        {
          "level": 2,
          "title": "十三、Vue中$route和$router有什么区别",
          "slug": "十三、vue中-route和-router有什么区别"
        },
        {
          "level": 3,
          "title": "this.$router",
          "slug": "this-router"
        },
        {
          "level": 3,
          "title": "this.$route",
          "slug": "this-route"
        },
        {
          "level": 2,
          "title": "十四、Vue3响应式的使用",
          "slug": "十四、vue3响应式的使用"
        },
        {
          "level": 3,
          "title": "引入 ref 方法",
          "slug": "引入-ref-方法"
        },
        {
          "level": 3,
          "title": "使用方式",
          "slug": "使用方式"
        },
        {
          "level": 3,
          "title": "实现简易 Computed 方法",
          "slug": "实现简易-computed-方法"
        },
        {
          "level": 2,
          "title": "十五、history和hash模式的区别",
          "slug": "十五、history和hash模式的区别"
        },
        {
          "level": 3,
          "title": "hash 模式",
          "slug": "hash-模式"
        },
        {
          "level": 3,
          "title": "history 模式",
          "slug": "history-模式"
        },
        {
          "level": 2,
          "title": "十六、VNode有哪些属性",
          "slug": "十六、vnode有哪些属性"
        },
        {
          "level": 2,
          "title": "十七、Vue2.0为什么不能检查数组的变化",
          "slug": "十七、vue2-0为什么不能检查数组的变化"
        },
        {
          "level": 3,
          "title": "解决方案",
          "slug": "解决方案"
        },
        {
          "level": 2,
          "title": "十八、Vue页面渲染流程",
          "slug": "十八、vue页面渲染流程"
        },
        {
          "level": 2,
          "title": "十九、React与Vue区别",
          "slug": "十九、react与vue区别"
        },
        {
          "level": 2,
          "title": "二十、computed和watch的区别",
          "slug": "二十、computed和watch的区别"
        },
        {
          "level": 3,
          "title": "computed",
          "slug": "computed"
        },
        {
          "level": 3,
          "title": "watch 监听属性",
          "slug": "watch-监听属性"
        },
        {
          "level": 3,
          "title": "总结：",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "二十一、Vue-Loader",
          "slug": "二十一、vue-loader"
        },
        {
          "level": 3,
          "title": "vue-loader 工作原理",
          "slug": "vue-loader-工作原理"
        },
        {
          "level": 3,
          "title": "CSS Modules",
          "slug": "css-modules"
        },
        {
          "level": 2,
          "title": "二十二、自定义指令",
          "slug": "二十二、自定义指令"
        },
        {
          "level": 3,
          "title": "输入框防抖",
          "slug": "输入框防抖"
        },
        {
          "level": 3,
          "title": "图片懒加载",
          "slug": "图片懒加载"
        },
        {
          "level": 3,
          "title": "一键 Copy的功能",
          "slug": "一键-copy的功能"
        }
      ]
    },
    {
      "title": "一、keep-alive",
      "frontmatter": {},
      "regularPath": "/Components/vue/innerComponents.html",
      "relativePath": "Components/vue/innerComponents.md",
      "key": "v-2a433f5a",
      "path": "/Components/vue/innerComponents.html",
      "headers": [
        {
          "level": 3,
          "title": "include和exclude指定是否缓存某些组件",
          "slug": "include和exclude指定是否缓存某些组件"
        },
        {
          "level": 3,
          "title": "keep-alive的钩子函数执行顺序",
          "slug": "keep-alive的钩子函数执行顺序"
        },
        {
          "level": 3,
          "title": "keep-alive的应用场景举例",
          "slug": "keep-alive的应用场景举例"
        },
        {
          "level": 3,
          "title": "思考题：缓存后如何获取数据",
          "slug": "思考题-缓存后如何获取数据"
        },
        {
          "level": 3,
          "title": "beforeRouteEnter",
          "slug": "beforerouteenter"
        },
        {
          "level": 3,
          "title": "actived",
          "slug": "actived"
        },
        {
          "level": 2,
          "title": "禁用 Teleport[#](https://cn.vuejs.org/guide/built-ins/teleport.html#disabling-teleport)",
          "slug": "禁用-teleport"
        },
        {
          "level": 2,
          "title": "多个 Teleport 共享目标[#](https://cn.vuejs.org/guide/built-ins/teleport.html#multiple-teleports-on-the-same-target)",
          "slug": "多个-teleport-共享目标"
        },
        {
          "level": 3,
          "title": "async setup()[#](https://cn.vuejs.org/guide/built-ins/suspense.html#async-setup)",
          "slug": "async-setup"
        },
        {
          "level": 3,
          "title": "异步组件",
          "slug": "异步组件"
        },
        {
          "level": 2,
          "title": "加载中状态",
          "slug": "加载中状态"
        },
        {
          "level": 2,
          "title": "异步依赖[#](https://cn.vuejs.org/guide/built-ins/suspense.html#async-dependencies)",
          "slug": "异步依赖"
        },
        {
          "level": 3,
          "title": "async setup()[#](https://cn.vuejs.org/guide/built-ins/suspense.html#async-setup)",
          "slug": "async-setup-2"
        },
        {
          "level": 3,
          "title": "异步组件[#](https://cn.vuejs.org/guide/built-ins/suspense.html#async-components)",
          "slug": "异步组件-2"
        },
        {
          "level": 2,
          "title": "加载中状态[#](https://cn.vuejs.org/guide/built-ins/suspense.html#loading-state)",
          "slug": "加载中状态-2"
        },
        {
          "level": 2,
          "title": "事件[#](https://cn.vuejs.org/guide/built-ins/suspense.html#events)",
          "slug": "事件"
        }
      ]
    },
    {
      "title": "Mixin是什么？",
      "frontmatter": {},
      "regularPath": "/Components/vue/mixin.html",
      "relativePath": "Components/vue/mixin.md",
      "key": "v-7368b5a0",
      "path": "/Components/vue/mixin.html",
      "headers": [
        {
          "level": 2,
          "title": "Mixin是什么？",
          "slug": "mixin是什么"
        },
        {
          "level": 2,
          "title": "Vue中的Mixin",
          "slug": "vue中的mixin"
        },
        {
          "level": 3,
          "title": "局部混入",
          "slug": "局部混入"
        },
        {
          "level": 3,
          "title": "全局混入",
          "slug": "全局混入"
        }
      ]
    },
    {
      "title": "Vue实现权限控制管理，控制到按钮级别的权限。",
      "frontmatter": {},
      "regularPath": "/Components/vue/permissionControl.html",
      "relativePath": "Components/vue/permissionControl.md",
      "key": "v-15bd0256",
      "path": "/Components/vue/permissionControl.html",
      "headers": [
        {
          "level": 3,
          "title": "接口权限",
          "slug": "接口权限"
        },
        {
          "level": 3,
          "title": "路由权限控制",
          "slug": "路由权限控制"
        },
        {
          "level": 3,
          "title": "菜单权限",
          "slug": "菜单权限"
        },
        {
          "level": 3,
          "title": "按钮权限",
          "slug": "按钮权限"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/Components/vue/template.html",
      "relativePath": "Components/vue/template.md",
      "key": "v-4bb298c2",
      "path": "/Components/vue/template.html",
      "headers": [
        {
          "level": 3,
          "title": "柯里化：一个函数可以接受多个参数，反复被调用",
          "slug": "柯里化-一个函数可以接受多个参数-反复被调用"
        },
        {
          "level": 3,
          "title": "需求：能实现ajax请求，自动在失败的时候重连，重试次数可传递，延迟时间",
          "slug": "需求-能实现ajax请求-自动在失败的时候重连-重试次数可传递-延迟时间"
        }
      ]
    },
    {
      "title": "一、Vuex",
      "frontmatter": {},
      "regularPath": "/Components/vue/vuex.html",
      "relativePath": "Components/vue/vuex.md",
      "key": "v-19e209c2",
      "path": "/Components/vue/vuex.html",
      "headers": [
        {
          "level": 2,
          "title": "一、Vuex",
          "slug": "一、vuex"
        },
        {
          "level": 3,
          "title": "State",
          "slug": "state"
        },
        {
          "level": 3,
          "title": "Getter",
          "slug": "getter"
        },
        {
          "level": 3,
          "title": "Mutation",
          "slug": "mutation"
        },
        {
          "level": 3,
          "title": "Action",
          "slug": "action"
        },
        {
          "level": 3,
          "title": "Module",
          "slug": "module"
        },
        {
          "level": 2,
          "title": "二、Vuex中的辅助函数",
          "slug": "二、vuex中的辅助函数"
        },
        {
          "level": 3,
          "title": "如何使用辅助函数",
          "slug": "如何使用辅助函数"
        },
        {
          "level": 3,
          "title": "辅助函数如何去映射vuex.store中的属性",
          "slug": "辅助函数如何去映射vuex-store中的属性"
        }
      ]
    },
    {
      "title": "如何实现二维码登录PC网站的需求",
      "frontmatter": {},
      "regularPath": "/Components/work/Scan.html",
      "relativePath": "Components/work/Scan.md",
      "key": "v-6ccc2e30",
      "path": "/Components/work/Scan.html",
      "headers": [
        {
          "level": 2,
          "title": "二维码登录的本质",
          "slug": "二维码登录的本质"
        },
        {
          "level": 2,
          "title": "扫描二维码登录的一般步骤",
          "slug": "扫描二维码登录的一般步骤"
        },
        {
          "level": 2,
          "title": "具体流程",
          "slug": "具体流程"
        },
        {
          "level": 3,
          "title": "生成二维码",
          "slug": "生成二维码"
        },
        {
          "level": 3,
          "title": "扫描二维码",
          "slug": "扫描二维码"
        },
        {
          "level": 3,
          "title": "状态确认",
          "slug": "状态确认"
        }
      ]
    },
    {
      "title": "发送验证码",
      "frontmatter": {},
      "regularPath": "/Components/work/SendeCode.html",
      "relativePath": "Components/work/SendeCode.md",
      "key": "v-d781a7b0",
      "path": "/Components/work/SendeCode.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        }
      ]
    },
    {
      "title": "防抖与节流封装",
      "frontmatter": {},
      "regularPath": "/Components/work/debAndThr.html",
      "relativePath": "Components/work/debAndThr.md",
      "key": "v-5ced1930",
      "path": "/Components/work/debAndThr.html",
      "headers": [
        {
          "level": 2,
          "title": "代码演示",
          "slug": "代码演示"
        }
      ]
    },
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201805%2F19%2F20180519142022_kVASd.thumb.700_0.jpeg&refer=http%3A%2F%2Fb-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1664607012&t=d9c7f089d193df41489bad49ebf22dc3",
        "heroText": "karry的学习日记",
        "tagline": "没有跨不过去的坎，只有走不完的路",
        "actionText": "点击从这里开始",
        "actionLink": "/Components/base/introduce",
        "features": [
          {
            "title": "梦想-最开始的地方",
            "details": "活成自己最想活成的样子，加油！"
          }
        ]
      },
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-3b12fbda",
      "path": "/"
    },
    {
      "title": "WebSocket",
      "frontmatter": {},
      "regularPath": "/Components/work/WebSocket.html",
      "relativePath": "Components/work/WebSocket.md",
      "key": "v-03d05308",
      "path": "/Components/work/WebSocket.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是WebSocket？",
          "slug": "什么是websocket"
        },
        {
          "level": 2,
          "title": "优点",
          "slug": "优点"
        },
        {
          "level": 2,
          "title": "何为PWA？",
          "slug": "何为pwa"
        }
      ]
    }
  ],
  "themeConfig": {
    "smoothScroll": true,
    "logo": "https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fc-ssl.duitang.com%2Fuploads%2Fitem%2F201911%2F30%2F20191130103938_uNhF5.thumb.700_0.jpeg&refer=http%3A%2F%2Fc-ssl.duitang.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1664606884&t=978883c3b180812cc76c793f1f6a6b92",
    "nav": [
      {
        "text": "首页",
        "link": "/"
      },
      {
        "text": "数据可视化",
        "link": "/Components/Echarts/echarts"
      },
      {
        "text": "JS",
        "link": "/Components/javascript/base"
      },
      {
        "text": "Vue",
        "link": "/Components/vue/base"
      },
      {
        "text": "计算机网络知识",
        "link": "/Components/CpNet/base"
      },
      {
        "text": "面试总结",
        "link": "/Components/md_interview/interview"
      },
      {
        "text": "语言",
        "ariLabel": "2021",
        "items": [
          {
            "text": "中文",
            "link": "/language/chinese/"
          },
          {
            "text": "英文",
            "link": "/language/english/"
          }
        ]
      },
      {
        "text": "github",
        "link": ""
      }
    ],
    "sidebar": {
      "/Components/": [
        {
          "title": "开发指南",
          "collapsable": false,
          "children": [
            [
              "base/introduce",
              "介绍"
            ],
            [
              "base/Reg",
              "正则表达式"
            ],
            [
              "base/Reg",
              "Map和Set的区别"
            ]
          ]
        },
        {
          "title": "HTML&CSS篇",
          "collapsable": false,
          "children": [
            [
              "htmlcss/CSS",
              "CSS样式"
            ],
            [
              "htmlcss/Selector",
              "CSS选择器"
            ],
            [
              "htmlcss/Flex",
              "Flex布局"
            ],
            [
              "htmlcss/animation",
              "前端动画"
            ],
            [
              "htmlcss/FontCss",
              "花式字体"
            ]
          ]
        },
        {
          "title": "Vue组件篇",
          "collapsable": false,
          "children": [
            [
              "static/IconStyle",
              "IconStyle"
            ],
            [
              "static/GuaguaLe",
              "canvas之刮刮乐"
            ],
            [
              "static/LuckyRolling",
              "幸运大转盘"
            ],
            [
              "static/Pinterest",
              "瀑布流"
            ],
            [
              "static/Icon",
              "图标"
            ],
            [
              "static/Button",
              "光亮按钮"
            ],
            [
              "static/Message",
              "信息提醒框"
            ],
            [
              "static/MagnifyingGlass",
              "放大镜效果"
            ],
            [
              "static/SlideVerify",
              "滑块验证"
            ]
          ]
        },
        {
          "title": "JavaScript篇",
          "collapsable": true,
          "children": [
            [
              "javascript/base",
              "JS基础"
            ],
            [
              "javascript/TypeError",
              "JavaScript的错误类型"
            ],
            [
              "javascript/Array",
              "数组的常用方法"
            ],
            [
              "javascript/clone",
              "浅拷贝与深拷贝"
            ],
            [
              "javascript/ESsix",
              "ES6新拓展"
            ],
            [
              "javascript/AST",
              "抽象语法树"
            ],
            [
              "javascript/extends",
              "JavaScript扩展"
            ],
            [
              "javascript/designPatterns",
              "JS常见设计模式"
            ],
            [
              "javascript/fileUpload",
              "大文件分块上传"
            ]
          ]
        },
        {
          "title": "Vue篇",
          "collapsable": true,
          "children": [
            [
              "vue/base",
              "Vue基础"
            ],
            [
              "vue/permissionControl",
              "前端权限控制"
            ],
            [
              "vue/directive",
              "Vue自定义指令"
            ],
            [
              "vue/template",
              "Ajax失败重连&Fn柯里化&Render"
            ],
            [
              "vue/vuex",
              "Vuex状态管理"
            ],
            [
              "vue/FirstLoad",
              "首屏加载优化"
            ],
            [
              "vue/mixin",
              "VueMixin混入"
            ],
            [
              "vue/innerComponents",
              "Vue内置组件"
            ],
            [
              "vue/Vuethree",
              "Vue3.0"
            ],
            [
              "vue/Axios",
              "Axios"
            ],
            [
              "vue/code",
              "Vue源码分析"
            ]
          ]
        },
        {
          "title": "WebPack篇",
          "collapsable": true,
          "children": [
            [
              "WebPack/webpack",
              "WebPack"
            ],
            [
              "WebPack/LoaderAndPlugin",
              "LoaderAndPlugin"
            ],
            [
              "WebPack/sourcemap",
              "sourcemap"
            ],
            [
              "WebPack/WebPackDevServer",
              "WebPackDevServer"
            ],
            [
              "WebPack/TreeShaking",
              "TreeShaking"
            ]
          ]
        },
        {
          "title": "React篇",
          "collapsable": true,
          "children": [
            [
              "react/base",
              "初识React"
            ],
            [
              "react/Reacthooks",
              "常用ReactHooks"
            ],
            [
              "react/ReactPerfomance",
              "React性能提升"
            ]
          ]
        },
        {
          "title": "业务功能篇",
          "collapsable": true,
          "children": [
            [
              "work/Scan",
              "扫码登录"
            ],
            [
              "work/WebSocket",
              "WebSocket"
            ],
            [
              "work/SendeCode",
              "验证码发送倒计时"
            ],
            [
              "work/debAndThr",
              "防抖与节流"
            ]
          ]
        },
        {
          "title": "NodeJS篇",
          "collapsable": true,
          "children": [
            [
              "NodeJs/Start",
              "初识NodeJS"
            ]
          ]
        },
        {
          "title": "Web性能提升篇",
          "collapsable": true,
          "children": [
            [
              "performance/Performance",
              "图片懒加载"
            ],
            [
              "performance/BorserPerformance",
              "前端性能监控"
            ],
            [
              "performance/Browser",
              "Web缓存"
            ],
            [
              "performance/WebWorker",
              "WebWorker"
            ]
          ]
        },
        {
          "title": "MiniPrograme篇",
          "collapsable": true,
          "children": [
            [
              "MiniPrograme/base",
              "初识小程序"
            ],
            [
              "MiniPrograme/package",
              "小程序打包体积问题"
            ],
            [
              "MiniPrograme/delay",
              "移动端事件延时"
            ]
          ]
        },
        {
          "title": "Java基础篇",
          "collapsable": true,
          "children": []
        },
        {
          "title": "计算机网络知识篇",
          "collapsable": true,
          "children": [
            [
              "CpNet/base",
              "计算机网络基础"
            ]
          ]
        },
        {
          "title": "数据结构与算法篇",
          "collapsable": true,
          "children": [
            [
              "dataStructureAndCount/DoCode",
              "编程"
            ],
            [
              "dataStructureAndCount/count",
              "算法"
            ],
            [
              "dataStructureAndCount/StackAndHeap",
              "堆与栈"
            ]
          ]
        }
      ]
    }
  }
}